
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Insert title here</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- CDN  서비스-->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</head>
<body>

  <form id="myform" name="myform" action="">
    <input type="hidden" id="idcheckyn" name="idcheckyn" value="N"> <!--hidden ID 는 중복체크 후 화면을 중지시켜줌-->

  <%-include('../layout/header.ejs')%>

<div class="container mt-3">
  <h1 style="margin-top:80px">회원가입</h1>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="아이디" name="userid" id="userid">
    <div class="input-group-append">
      <button class="btn btn-success" type="button" id="btnIdCheck">중복체크</button>  
     </div>
  </div>

  <div class="input-group mb-3">
    <input type="password" class="form-control" name="password" id="password" placeholder="페스워드">
  </div>

  <div class="input-group mb-3">
    <input type="password" class="form-control" name="password2" id="password2" placeholder="패스워드확인">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="이름" name="username" id="username">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="닉네임" name="nickname" id="nickname">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="email" name="email" id="email">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="전화번호" name="phone" id="phone">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="우편번호" name="zipcode" id="zipcode">
  </div>
  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="도로주소" name="address1" id="address1">
  </div>

  <div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="상세주소" name="address2" id="address2">
  </div>    
  


  <!-- 다음 우편 api :주소체계 번지 -> 길  -->
  
  	<div class="container" style="text-align:right">
	 
	  <div class="btn-group">
	    
       <button type="button" class="btn btn-primary" onclick="save()">등록</button>&nbsp;&nbsp;
      
	    <button type="button" class="btn btn-primary" onclick="goCancel()">취소</button>&nbsp;&nbsp;
	  </div>
	</div>	
</div>

</form>
</body>
</html>

<script>

$(document).ready( ()=> {
  $("#btnIdCheck").click( ()=>{
    
    let userid = $("#userid").val();

    $.ajax({
      url:"/member/idcheck",
      data:{crossid:userid},
      method:"post",
      dataType:"json"
    }).then( (result)=> {

      if ( result.result == "success")
      {
        alert("사용가능한 아이디입니다.");
        $("#idcheckyn").val("Y"); //idcheck가 되었음을 저장
        $("#userid").prop("readonly","true"); // readonly는 서버로 정보를 보냄 disabled은 완전 무력화, 값 안 보냄.
      }
      else
      {
        alert("이미 사용중인 아이디입니다.");
      }
    })
    .catch((res, status,error)=> {
      console.log( status );
    })
  });

})

function save() {
  // data = { userid:$("#userid", val(), userid:$("#userid", val(), ......}
  // 폼직렬화 
  // 직렬화 : 객체를 파일이나 네트워크로 전송하는 기법 , 
            //쉽게 말하면 객체 출력

  let params = $("#myform").serialize(); // 파일 전송 시 사용 못한다
  // console.log( data );
  // 시리얼라이즈된 폼에 1번 부터 10번까지 각 항목별로 숫자를 입력하면 아래 와 같이 콘솔에 출력해 볼 수 있다.
  //idcheckyn=N&userid=1&password=2&password2=2&username=4&nickname=5&email=6&phone=7&zipcode=8&address1=9&address2=10


  // console.log( params );

  $.ajax({
      url:"/member/save",
      data:params,
      method:"post",
      dataType:"json"
    }).then( (result)=> {
      if(result.result == "success")
      {
        alert("회원가입을 축하드립니다.");
        //로그온페이지로 이동 
        location.href = "/member/login"; // get 방식, a = anchor 앵커태그

      }
    })
    .catch( (res, status, error)=> {
      console.log( status );
    })

  }


</script>